diff --git a/node_modules/bmaplib.lushu/index.js b/node_modules/bmaplib.lushu/index.js
index a793df6..a94154c 100644
--- a/node_modules/bmaplib.lushu/index.js
+++ b/node_modules/bmaplib.lushu/index.js
@@ -4,8 +4,8 @@
     } else if (typeof define === 'function' && define.amd) {
         define(factory);
     } else {
-        root.BMapLib = root.BMapLib || {};
-        root.BMapLib.LuShu = root.BMapLib.Lushu || factory();  
+        root.BMapGLLib = root.BMapGLLib || {};
+        root.BMapGLLib.LuShu = root.BMapGLLib.Lushu || factory();
     }
 })(this, function() {
     var baidu = {};
@@ -75,8 +75,8 @@
         key = baidu.string.toCamelCase(key);
 
         var value = element.style[key] ||
-                    (element.currentStyle ? element.currentStyle[key] : '') ||
-                    dom.getComputedStyle(element, key);
+            (element.currentStyle ? element.currentStyle[key] : '') ||
+            dom.getComputedStyle(element, key);
 
         if (!value) {
             var fixer = dom._styleFixer[key];
@@ -138,21 +138,21 @@
     };
     baidu.object = baidu.object || {};
     baidu.extend =
-    baidu.object.extend = function(target, source) {
-        for (var p in source) {
-            if (source.hasOwnProperty(p)) {
-                target[p] = source[p];
+        baidu.object.extend = function(target, source) {
+            for (var p in source) {
+                if (source.hasOwnProperty(p)) {
+                    target[p] = source[p];
+                }
             }
-        }
-        return target;
-    };
+            return target;
+        };
 
     /**
-     * @exports LuShu as BMapLib.LuShu
+     * @exports LuShu as BMapGLLib.LuShu
      */
     var LuShu = function(map, path, opts) {
         try {
-            BMap;
+            BMapGL;
         } catch (e) {
             throw Error('Baidu Map JS API is not ready yet!');
         }
@@ -161,9 +161,8 @@
         }
         this._map = map;
         this._path = path;
-        this.i = 0;
+        this.i = -1;
         this._setTimeoutQuene = [];
-        this._projection = this._map.getMapType().getProjection();
         this._opts = {
             icon: null,
             speed: 4000,
@@ -173,7 +172,7 @@
         this._setOptions(opts);
         this._rotation = 0;
 
-        if (!this._opts.icon instanceof BMap.Icon) {
+        if (!this._opts.icon instanceof BMapGL.Icon) {
             this._opts.icon = defaultIcon;
         }
     }
@@ -191,32 +190,33 @@
         var me = this,
             len = me._path.length;
         this._opts.onstart && this._opts.onstart(me)
-        if (me.i && me.i < len - 1) {
+        if (me.i != -1 && me.i < len - 1) {
             if (!me._fromPause) {
                 return;
             }else if(!me._fromStop){
-	            me._moveNext(++me.i);
+                me._moveNext(++me.i);
             }
         }else {
-            !me._marker && me._addMarker();
+            me.i = 0;
+            me._addMarker();
             me._timeoutFlag = setTimeout(function() {
-                    !me._overlay && me._addInfoWin();
-                    me._moveNext(me.i);
+                !me._overlay && me._addInfoWin();
+                me._moveNext(me.i);
             },400);
         }
         this._fromPause = false;
         this._fromStop = false;
     },
-    LuShu.prototype.stop = function() {
-        this.i = 0;
-        this._fromStop = true;
-        clearInterval(this._intervalFlag);
-        this._clearTimeout();
-        for (var i = 0, t = this._opts.landmarkPois, len = t.length; i < len; i++) {
-            t[i].bShow = false;
-        }
-        this._opts.onstop && this._opts.onstop(this)
-    };
+        LuShu.prototype.stop = function() {
+            this.i = -1;
+            this._fromStop = true;
+            clearInterval(this._intervalFlag);
+            this._clearTimeout();
+            for (var i = 0, t = this._opts.landmarkPois, len = t.length; i < len; i++) {
+                t[i].bShow = false;
+            }
+            this._opts.onstop && this._opts.onstop(this)
+        };
     LuShu.prototype.pause = function() {
         clearInterval(this._intervalFlag);
         this._fromPause = true;
@@ -247,7 +247,7 @@
                 clearTimeout(this._timeoutFlag);
             }
             this._overlay && this._map.removeOverlay(this._overlay);
-            var marker = new BMap.Marker(this._path[0]);
+            var marker = new BMapGL.Marker(this._path[0]);
             this._opts.icon && marker.setIcon(this._opts.icon);
             this._map.addOverlay(marker);
             marker.setAnimation(BMAP_ANIMATION_DROP);
@@ -268,30 +268,36 @@
         _getDistance: function(pxA, pxB) {
             return Math.sqrt(Math.pow(pxA.x - pxB.x, 2) + Math.pow(pxA.y - pxB.y, 2));
         },
-        _move: function(initPos,targetPos,effect) {
+        _move: function(initPos,targetPos,effect, index) {
             var me = this,
                 currentCount = 0,
                 timer = 10,
                 step = this._opts.speed / (1000 / timer),
-                init_pos = this._projection.lngLatToPoint(initPos),
-                target_pos = this._projection.lngLatToPoint(targetPos),
+                init_pos = BMapGL.Projection.convertLL2MC(initPos),
+                //获取结束点的(x,y)坐标
+                target_pos = BMapGL.Projection.convertLL2MC(targetPos),
+                init_pos = new BMapGL.Pixel(init_pos.lng, init_pos.lat),
+                target_pos = new BMapGL.Pixel(target_pos.lng, target_pos.lat),
                 count = Math.round(me._getDistance(init_pos, target_pos) / step);
             if (count < 1) {
+                me._opts.onTick && me._opts.onTick(index);
                 me._moveNext(++me.i);
                 return;
             }
             me._intervalFlag = setInterval(function() {
-	            if (currentCount >= count) {
-	                clearInterval(me._intervalFlag);
-		        	if(me.i > me._path.length){
-						return;
-		        	}
-	                me._moveNext(++me.i);
-	            } else {
+                if (currentCount >= count) {
+                    me._opts.onTick && me._opts.onTick(index);
+                    clearInterval(me._intervalFlag);
+                    if(me.i > me._path.length){
+                        me._opts.onTick && me._opts.onTick(index);
+                        return;
+                    }
+                    me._moveNext(++me.i);
+                } else {
                     currentCount++;
                     var x = effect(init_pos.x, target_pos.x, currentCount, count),
                         y = effect(init_pos.y, target_pos.y, currentCount, count),
-                        pos = me._projection.pointToLngLat(new BMap.Pixel(x, y));
+                        pos = BMapGL.Projection.convertMC2LL(new BMapGL.Point(x, y));
                     if(currentCount == 1){
                         var proPos = null;
                         if(me.i - 1 >= 0){
@@ -309,7 +315,7 @@
                     me._marker.setPosition(pos);
                     me._setInfoWin(pos);
                 }
-	        },timer);
+            },timer);
         },
         setRotation : function(prePos,curPos,targetPos){
             var me = this;
@@ -317,10 +323,9 @@
             //start!
             curPos =  me._map.pointToPixel(curPos);
             targetPos =  me._map.pointToPixel(targetPos);
-
             if(targetPos.x != curPos.x){
                 var tan = (targetPos.y - curPos.y)/(targetPos.x - curPos.x),
-                atan  = Math.atan(tan);
+                    atan  = Math.atan(tan);
                 deg = atan*360/(2*Math.PI);
                 //degree  correction;
                 if(targetPos.x < curPos.x){
@@ -329,7 +334,6 @@
                 } else {
                     deg = -deg;
                 }
-
                 me._marker.setRotation(-deg);
 
             }else {
@@ -352,8 +356,9 @@
         _moveNext: function(index) {
             var me = this;
             if (index < this._path.length - 1) {
-                me._move(me._path[index], me._path[index + 1], me._tween.linear);
+                me._move(me._path[index], me._path[index + 1], me._tween.linear, index);
             } else {
+                me._opts.onTick && me._opts.onTick(index);
                 me.stop()
             }
         },
@@ -386,7 +391,7 @@
         _tween: {
             linear: function(initPos, targetPos, currentCount, count) {
                 var b = initPos, c = targetPos - initPos, t = currentCount,
-                d = count;
+                    d = count;
                 return c * t / d + b;
             }
         },
@@ -394,14 +399,14 @@
             var t = this._opts.landmarkPois, distance;
             for (var i = 0, len = t.length; i < len; i++) {
                 if (!t[i].bShow) {
-                    distance = this._map.getDistance(new BMap.Point(t[i].lng, t[i].lat), markerPoi);
+                    distance = this._map.getDistance(new BMapGL.Point(t[i].lng, t[i].lat), markerPoi);
                     if (distance < 10) {
                         t[i].bShow = true;
                         return i;
                     }
                 }
             }
-           return -1;
+            return -1;
         }
     });
     function CustomOverlay(point,html) {
@@ -410,7 +415,7 @@
     }
 
     function initCustomOverlay() {
-        CustomOverlay.prototype = new BMap.Overlay();
+        CustomOverlay.prototype = new BMapGL.Overlay();
         CustomOverlay.prototype.initialize = function(map) {
             var div = this._div = baidu.dom.create('div', {style: 'border:solid 1px #ccc;width:auto;min-width:50px;text-align:center;position:absolute;background:#fff;color:#000;font-size:12px;border-radius: 10px;padding:5px;white-space: nowrap;'});
             div.innerHTML = this._html;
